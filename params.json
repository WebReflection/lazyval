{"name":"Lazyval","tagline":"A simple function to define lazy properties","body":"lazyval\r\n=======\r\n\r\n[![build status](https://secure.travis-ci.org/WebReflection/lazyval.png)](http://travis-ci.org/WebReflection/lazyval)\r\n\r\nA simple function to define lazy properties to a generic object or a prototype.\r\n\r\nThere's nothing special on this function except it solves problem with older Android phones and IE9 Mobile and it's compatible with mostly every browser or engine out there.\r\n\r\n\r\n### function signature\r\n\r\n```js\r\n// returns the generic Object\r\nlazyval(\r\n  // where to define the lazy property\r\n  // can be object or a prototype\r\n  generic:Object,\r\n  // the property name\r\n  property:String,\r\n  // the callback to invoke once\r\n  // the generic object or any inherited one\r\n  // will access this property\r\n  callback:Function\r\n  // this callback will be invoked inside the getter as:\r\n  //  callback.call(this, property, generic);\r\n  // and its returned value will be assigned\r\n);\r\n```\r\n\r\n\r\n### lazy examples via object\r\n\r\n```js\r\nvar o = lazyval({}, {\r\n  uid: function () {\r\n    return 'object:' + Math.round(\r\n      Math.random() * Date.now()\r\n    );\r\n  }\r\n});\r\n\r\n// only once needed ...\r\no.uid; // object:27364279\r\n```\r\n\r\n\r\n### lazy examples via inheritance\r\n\r\n```js\r\nfunction A() {}\r\nlazyval(\r\n  A.prototype,\r\n  'expensive',\r\n  function () {\r\n    // do expensive computation here\r\n    // as example ...\r\n    return Math.random();\r\n    // return the value to lazily assign\r\n    // as property name of the object\r\n  }\r\n);\r\n\r\nvar\r\n  a1 = new A,\r\n  a2 = new A\r\n;\r\n\r\na1.expensive; // 0.346731865\r\na1.expensive === a1.expensive; // true\r\na2.expensive === a1.expensive; // false\r\na2.expensive; // 0.874216789\r\n\r\n// clean up\r\ndelete a1.expensive;\r\na1.expensive; // 0.4567891\r\na1.expensive === a1.expensive; // true\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}